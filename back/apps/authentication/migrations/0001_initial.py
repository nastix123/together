# Generated by Django 5.0.7 on 2024-07-18 13:42

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "date_creation",
                    models.DateTimeField(
                        blank=True,
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="Date created",
                    ),
                ),
                (
                    "date_updated",
                    models.DateTimeField(auto_now=True, verbose_name="Date updated"),
                ),
                (
                    "first_name",
                    models.TextField(
                        blank=True, max_length=255, null=True, verbose_name="first_name"
                    ),
                ),
                (
                    "last_name",
                    models.TextField(
                        blank=True, max_length=255, null=True, verbose_name="last_name"
                    ),
                ),
                (
                    "middle_name",
                    models.TextField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="middle_name",
                    ),
                ),
                (
                    "username",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        unique=True,
                        verbose_name="email",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        unique=True,
                        verbose_name="phone",
                    ),
                ),
                ("password", models.CharField(max_length=255)),
                (
                    "appointment",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="appointment",
                    ),
                ),
                (
                    "job_title",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="job_title"
                    ),
                ),
                ("is_active", models.BooleanField(default=False)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "db_table": "users",
                "permissions": [
                    ("view_user", "Can view User list"),
                    ("create_user", "Can add User"),
                    ("change_user", "Can change User"),
                    ("delete_user", "Can delete User"),
                    ("reset-password", "Can reset password"),
                ],
                "default_permissions": [],
            },
        ),
    ]
